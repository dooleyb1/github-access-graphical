{"ast":null,"code":"import _defineProperty from \"/Users/xsellco/github/college/sweng/github-access-graphical/app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/xsellco/github/college/sweng/github-access-graphical/app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/xsellco/github/college/sweng/github-access-graphical/app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/xsellco/github/college/sweng/github-access-graphical/app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/xsellco/github/college/sweng/github-access-graphical/app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/xsellco/github/college/sweng/github-access-graphical/app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/xsellco/github/college/sweng/github-access-graphical/app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/xsellco/github/college/sweng/github-access-graphical/app/src/Form.js\";\nimport React, { Component } from 'react';\nimport { FormErrors } from './FormErrors';\nimport './Form.css';\n\nvar Form =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Form, _Component);\n\n  function Form(props) {\n    var _this;\n\n    _classCallCheck(this, Form);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Form).call(this, props));\n\n    _this.handleUserInput = function (e) {\n      var name = e.target.name;\n      var value = e.target.value;\n      console.log(\"Hello\");\n\n      _this.setState(_defineProperty({}, name, value), function () {\n        _this.validateField(name, value);\n      });\n    };\n\n    _this.state = {\n      username: '',\n      password: '',\n      formErrors: {\n        username: '',\n        password: ''\n      },\n      usernameValid: false,\n      passwordValid: false,\n      formValid: false\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Form, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        value: event.target.value\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      alert('A name was submitted: ' + this.state.value);\n      event.preventDefault();\n    }\n  }, {\n    key: \"validateField\",\n    value: function validateField(fieldName, value) {\n      var fieldValidationErrors = this.state.formErrors;\n      var usernameValid = this.state.usernameValid;\n      var passwordValid = this.state.passwordValid;\n\n      switch (fieldName) {\n        case 'username':\n          usernameValid = value.length >= 6;\n          fieldValidationErrors.username = usernameValid ? '' : ' is invalid';\n          break;\n\n        case 'password':\n          passwordValid = value.length >= 6;\n          fieldValidationErrors.password = passwordValid ? '' : ' is too short';\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        formErrors: fieldValidationErrors,\n        usernameValid: usernameValid,\n        passwordValid: passwordValid\n      }, this.validateForm);\n    }\n  }, {\n    key: \"validateForm\",\n    value: function validateForm() {\n      this.setState({\n        formValid: this.state.usernameValid && this.state.passwordValid\n      });\n    }\n  }, {\n    key: \"errorClass\",\n    value: function errorClass(error) {\n      return error.length === 0 ? '' : 'has-error';\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        className: \"demoForm\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"GitHub Access\"), React.createElement(\"div\", {\n        className: \"panel panel-default\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"form-group \".concat(this.errorClass(this.state.formErrors.username)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        className: \"form-control\",\n        name: \"username\",\n        placeholder: \"GitHub Username\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Find Me\"));\n    }\n  }]);\n\n  return Form;\n}(Component);\n\nexport default Form;","map":{"version":3,"sources":["/Users/xsellco/github/college/sweng/github-access-graphical/app/src/Form.js"],"names":["React","Component","FormErrors","Form","props","handleUserInput","e","name","target","value","console","log","setState","validateField","state","username","password","formErrors","usernameValid","passwordValid","formValid","handleChange","bind","handleSubmit","event","alert","preventDefault","fieldName","fieldValidationErrors","length","validateForm","error","errorClass"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAO,YAAP;;IAEMC,I;;;;;AAEJ,gBAAaC,KAAb,EAAoB;AAAA;;AAAA;;AAClB,8EAAMA,KAAN;;AADkB,UAwBpBC,eAxBoB,GAwBF,UAACC,CAAD,EAAO;AACvB,UAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASD,IAAtB;AACA,UAAME,KAAK,GAAGH,CAAC,CAACE,MAAF,CAASC,KAAvB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;;AACA,YAAKC,QAAL,qBAAgBL,IAAhB,EAAuBE,KAAvB,GACc,YAAM;AAAE,cAAKI,aAAL,CAAmBN,IAAnB,EAAyBE,KAAzB;AAAiC,OADvD;AAED,KA9BmB;;AAElB,UAAKK,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXC,MAAAA,UAAU,EAAE;AAACF,QAAAA,QAAQ,EAAE,EAAX;AAAeC,QAAAA,QAAQ,EAAE;AAAzB,OAHD;AAIXE,MAAAA,aAAa,EAAE,KAJJ;AAKXC,MAAAA,aAAa,EAAE,KALJ;AAMXC,MAAAA,SAAS,EAAE;AANA,KAAb;AASA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBD,IAAlB,uDAApB;AAZkB;AAanB;;;;iCAEYE,K,EAAO;AAClB,WAAKZ,QAAL,CAAc;AAACH,QAAAA,KAAK,EAAEe,KAAK,CAAChB,MAAN,CAAaC;AAArB,OAAd;AACD;;;iCAEYe,K,EAAO;AAClBC,MAAAA,KAAK,CAAC,2BAA2B,KAAKX,KAAL,CAAWL,KAAvC,CAAL;AACAe,MAAAA,KAAK,CAACE,cAAN;AACD;;;kCAUaC,S,EAAWlB,K,EAAO;AAC9B,UAAImB,qBAAqB,GAAG,KAAKd,KAAL,CAAWG,UAAvC;AACA,UAAIC,aAAa,GAAG,KAAKJ,KAAL,CAAWI,aAA/B;AACA,UAAIC,aAAa,GAAG,KAAKL,KAAL,CAAWK,aAA/B;;AAEA,cAAOQ,SAAP;AACE,aAAK,UAAL;AACET,UAAAA,aAAa,GAAGT,KAAK,CAACoB,MAAN,IAAgB,CAAhC;AACAD,UAAAA,qBAAqB,CAACb,QAAtB,GAAiCG,aAAa,GAAG,EAAH,GAAQ,aAAtD;AACA;;AACF,aAAK,UAAL;AACEC,UAAAA,aAAa,GAAGV,KAAK,CAACoB,MAAN,IAAgB,CAAhC;AACAD,UAAAA,qBAAqB,CAACZ,QAAtB,GAAiCG,aAAa,GAAG,EAAH,GAAO,eAArD;AACA;;AACF;AACE;AAVJ;;AAYA,WAAKP,QAAL,CAAc;AAACK,QAAAA,UAAU,EAAEW,qBAAb;AACEV,QAAAA,aAAa,EAAEA,aADjB;AAEEC,QAAAA,aAAa,EAAEA;AAFjB,OAAd,EAGiB,KAAKW,YAHtB;AAID;;;mCAEc;AACb,WAAKlB,QAAL,CAAc;AAACQ,QAAAA,SAAS,EAAE,KAAKN,KAAL,CAAWI,aAAX,IAA4B,KAAKJ,KAAL,CAAWK;AAAnD,OAAd;AACD;;;+BAEUY,K,EAAO;AAChB,aAAOA,KAAK,CAACF,MAAN,KAAiB,CAAjB,GAAqB,EAArB,GAA0B,WAAjC;AACD;;;6BAES;AACR,aACE;AAAM,QAAA,SAAS,EAAC,UAAhB;AAA2B,QAAA,QAAQ,EAAE,KAAKN,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAIE;AAAK,QAAA,SAAS,uBAAgB,KAAKS,UAAL,CAAgB,KAAKlB,KAAL,CAAWG,UAAX,CAAsBF,QAAtC,CAAhB,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,MAA3B;AAA4B,QAAA,SAAS,EAAC,cAAtC;AAAqD,QAAA,IAAI,EAAC,UAA1D;AACE,QAAA,WAAW,EAAC,iBADd;AAEE,QAAA,QAAQ,EAAE,KAAKM,YAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAJF,EASE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBATF,CADF;AAaD;;;;EA/EgBpB,S;;AAkFnB,eAAeE,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport { FormErrors } from './FormErrors';\nimport './Form.css';\n\nclass Form extends Component {\n\n  constructor (props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      formErrors: {username: '', password: ''},\n      usernameValid: false,\n      passwordValid: false,\n      formValid: false\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  handleSubmit(event) {\n    alert('A name was submitted: ' + this.state.value);\n    event.preventDefault();\n  }\n\n  handleUserInput = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    console.log(\"Hello\");\n    this.setState({[name]: value},\n                  () => { this.validateField(name, value) });\n  }\n\n  validateField(fieldName, value) {\n    let fieldValidationErrors = this.state.formErrors;\n    let usernameValid = this.state.usernameValid;\n    let passwordValid = this.state.passwordValid;\n\n    switch(fieldName) {\n      case 'username':\n        usernameValid = value.length >= 6;\n        fieldValidationErrors.username = usernameValid ? '' : ' is invalid';\n        break;\n      case 'password':\n        passwordValid = value.length >= 6;\n        fieldValidationErrors.password = passwordValid ? '': ' is too short';\n        break;\n      default:\n        break;\n    }\n    this.setState({formErrors: fieldValidationErrors,\n                    usernameValid: usernameValid,\n                    passwordValid: passwordValid\n                  }, this.validateForm);\n  }\n\n  validateForm() {\n    this.setState({formValid: this.state.usernameValid && this.state.passwordValid});\n  }\n\n  errorClass(error) {\n    return(error.length === 0 ? '' : 'has-error');\n  }\n\n  render () {\n    return (\n      <form className=\"demoForm\" onSubmit={this.handleSubmit}>\n        <label htmlFor=\"username\">GitHub Access</label>\n        <div className=\"panel panel-default\">\n        </div>\n        <div className={`form-group ${this.errorClass(this.state.formErrors.username)}`}>\n          <input type=\"text\" required className=\"form-control\" name=\"username\"\n            placeholder=\"GitHub Username\"\n            onChange={this.handleChange}/>\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary\">Find Me</button>\n      </form>\n    )\n  }\n}\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}